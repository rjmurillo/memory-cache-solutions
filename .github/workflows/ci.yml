name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-11-arm, ubuntu-24.04-arm, ubuntu-latest, windows-latest, macos-latest] 
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          global-json-file: global.json

      - name: Restore
        shell: pwsh
        run: dotnet restore

      - name: Build
        shell: pwsh
        run: dotnet build --configuration Release --no-restore /warnaserror

      - name: Test
        shell: pwsh
        run: dotnet test --configuration Release --no-build --logger 'trx;LogFileName=test-results.trx' --collect 'Xplat Code Coverage'

      - name: Run Benchmarks (all suites for gate)
        shell: pwsh
        run: |
          dotnet run -c Release --project tests/Benchmarks/Benchmarks.csproj --filter * --artifacts "BenchmarkDotNet.Artifacts"
          # Copy a canonical JSON to a stable filename for gate comparison
          $json = Get-ChildItem -Path BenchmarkDotNet.Artifacts/results -Filter "Benchmarks.CacheBenchmarks-report-full.json" | Select-Object -First 1
          if (-not $json) { Write-Error 'CacheBenchmarks full JSON not found'; exit 1 }
          Copy-Item $json.FullName BenchmarkDotNet.Artifacts/results/current.json
          # Also copy contention suite if produced
          $contJson = Get-ChildItem -Path BenchmarkDotNet.Artifacts/results -Filter "Benchmarks.ContentionBenchmarks-report-full.json" | Select-Object -First 1
          if ($contJson) { Copy-Item $contJson.FullName BenchmarkDotNet.Artifacts/results/current-contention.json }

      - name: Bench Gate Compare (CacheBenchmarks)
        if: always()
        shell: pwsh
        run: |
          $baselineDir = "benchmarks/baseline"
          if (Test-Path $baselineDir) {
            # Provide directory; BenchGate resolves per-OS naming
            dotnet run -c Release --project tools/BenchGate/BenchGate.csproj -- $baselineDir BenchmarkDotNet.Artifacts/results/current.json --suite=CacheBenchmarks
          } else { Write-Host 'Baseline directory missing; skipping.' }

      - name: Bench Gate Compare (ContentionBenchmarks)
        if: always()
        shell: pwsh
        run: |
          $baselineDir = "benchmarks/baseline"
          if (Test-Path BenchmarkDotNet.Artifacts/results/current-contention.json) {
            if (Test-Path $baselineDir) {
              dotnet run -c Release --project tools/BenchGate/BenchGate.csproj -- $baselineDir BenchmarkDotNet.Artifacts/results/current-contention.json --suite=ContentionBenchmarks
            } else { Write-Host 'Baseline directory missing; skipping contention gate.' }
          } else { Write-Host 'No contention suite JSON produced; skipping.' }

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: |
            **/TestResults/*.trx
            **/coverage.cobertura.xml
            BenchmarkDotNet.Artifacts/results/*.json
            BenchmarkDotNet.Artifacts/results/*.md
            BenchmarkDotNet.Artifacts/results/*.html
